{"version":3,"sources":["assets\\Scripts\\game.js"],"names":["Bird","require","cc","Class","Component","properties","Bg0","type","Node","Bg1","BirdSp","ScoreLabel","Label","scoreAudio","AudioClip","pipePrefab","Prefab","pipe","gameScore","gameStatus","GameStatus","Game_Ready","onLoad","start","node","getChildByName","getComponent","init","update","dt","Game_Playing","x","Game_Over","pipesChild","children","c","length","width","gainScore","spawnNewPipe","destroy","instantiate","addChild","minY","maxY","y","Math","random","gameOver","string","toString","pos","audioEngine","playEffect","resetScore","resetPipePos"],"mappings":"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","sourceRoot":"/","sourcesContent":["import { GameStatus } from './enum';\r\nconst Bird = require('bird');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        Bg0: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        Bg1: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        BirdSp: {\r\n            default: null,\r\n            type: Bird\r\n        },\r\n        // ScoreLabel引用\r\n        ScoreLabel: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 得分音效资源\r\n        scoreAudio: {\r\n            default: null,\r\n            type: cc.AudioClip\r\n        },\r\n        // 水管预制资源\r\n        pipePrefab: {\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        pipe: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 游戏得分\r\n        gameScore: 0,\r\n        // 游戏状态\r\n        gameStatus: GameStatus.Game_Ready,\r\n\r\n    },\r\n\r\n    onLoad() {\r\n\r\n    },\r\n\r\n    start() {\r\n        // 初始化bird\r\n        this.node.getChildByName(\"Bird\").getComponent('bird').init(this);\r\n    },\r\n\r\n    update(dt) {\r\n        // 若游戏不在进行中，则不进行后续操作\r\n        if (this.gameStatus != GameStatus.Game_Playing) return\r\n\r\n        // 移动背景图\r\n        this.Bg0.x -= 1;\r\n        this.Bg1.x -= 1;\r\n\r\n        if (this.Bg0.x <= -288) this.Bg0.x = 288;\r\n        if (this.Bg1.x <= -288) this.Bg1.x = 288;\r\n\r\n        // 若游戏结束，则不进行后续操作\r\n        if (this.gameStatus == GameStatus.Game_Over) return;\r\n\r\n        let pipesChild = this.node.getChildByName('Pipes').children;\r\n        for (let c = 0; c < pipesChild.length; c++) {\r\n            // 移动水管\r\n            pipesChild[c].x -= 1;\r\n            // 判断鸟越过水管\r\n            if (pipesChild[c].x == -this.node.getChildByName(\"Bird\").width) {\r\n                this.gainScore();\r\n            }\r\n            // 生成新水管\r\n            if (pipesChild[c].x == -50) { this.spawnNewPipe(); };\r\n            // 销毁水管\r\n            if (pipesChild[c].x <= -170) {\r\n                pipesChild[c].destroy();\r\n            }\r\n        }\r\n    },\r\n    // 生成新水管\r\n    spawnNewPipe: function () {\r\n        this.pipe = cc.instantiate(this.pipePrefab);\r\n        this.node.getChildByName('Pipes').addChild(this.pipe)\r\n        this.pipe.x = 170;\r\n        let minY = -100, maxY = 100;\r\n        this.pipe.y = minY + Math.random() * (maxY - minY);\r\n    },\r\n    // 游戏结束\r\n    gameOver: function () {\r\n        this.gameStatus = GameStatus.Game_Over;\r\n        this.ScoreLabel.string = this.gameScore.toString();\r\n        // this.node.getChildByName('Pipes').children.destroy()\r\n    },\r\n    // 更新分数\r\n    gainScore: function (pos) {\r\n        this.gameScore++;\r\n        this.ScoreLabel.string = this.gameScore.toString();\r\n        // 播放得分音效\r\n        cc.audioEngine.playEffect(this.scoreAudio, false);\r\n    },\r\n\r\n    // 重置分数\r\n    resetScore: function () {\r\n        this.gameScore = 0;\r\n        this.ScoreLabel.string = this.gameScore.toString();\r\n    },\r\n\r\n    // 开始游戏时，重置水管位置\r\n    resetPipePos: function () {\r\n        let pipesChild = this.node.getChildByName('Pipes').children;\r\n        for (let c = 0; c < pipesChild.length; c++) {\r\n            pipesChild[c].destroy();\r\n        }\r\n        this.spawnNewPipe();\r\n    }\r\n\r\n});\r\n"]}